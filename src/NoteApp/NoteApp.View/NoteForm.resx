<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPY6AQD2OgEAAAAAAAAA
        AAAAAAADAAAAAAAAADcAAAC4AAAA8QAAAPsAAAD7AAAA+wAAAPsAAAD7AAAA+wAAAPsAAAD7AAAA+wAA
        APsAAAD7AAAA+wAAAPsAAAD7AAAA+wAAAPsAAAD7AAAA+wAAAPsAAAD3AAAA1AAAAGQAAAAAAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAABdAAAA/QAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD9AAAA/wAA
        AKIAAAABAAAAAAAAAAAAAAAAAAAAOgAAAPgAAAD/AAAA/gAAAMsAAACnAAAAqQAAAKkAAACpAAAAqQAA
        AKkAAACpAAAAqQAAAKkAAACpAAAAqQAAAKkAAACpAAAAqQAAAKkAAACpAAAAqQAAAKkAAACnAAAAtwAA
        APUAAAD8AAAA/wAAAIEAAAAAAAAAAwAAAAAAAAC0AAAA/wAAAP8AAAB0AAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAAAAAAANAAAAOsAAAD/AAAA6QAAABMAAAAAAAAAAQAAAO0AAAD/AAAAywAAAAAAAAABAAAABAAA
        AAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAA
        AAMAAAADAAAABAAAAAYAAAAAAAAAfQAAAP8AAAD/AAAARAAAAAAAAAADAAAA+gAAAP8AAACqAAAAAAAA
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABYAAAA/wAAAP8AAABVAAAAAAAAAAQAAAD7AAAA/wAA
        AKkAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAFYAAAD/AAAA/wAAAFYAAAAAAAAABAAA
        APsAAAD/AAAAqQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAVgAAAP8AAAD/AAAAVgAA
        AAAAAAAEAAAA+wAAAP8AAACpAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABWAAAA/wAA
        AP8AAABWAAAAAAAAAAQAAAD7AAAA/wAAAKkAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAA
        AFYAAAD/AAAA/wAAAFYAAAAAAAAABAAAAPsAAAD/AAAAqQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAAgAAAAEAAAAEAAAABAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAAVgAAAP8AAAD/AAAAVgAAAAAAAAAEAAAA+wAAAP8AAACpAAAAAAAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAEAAAAAQAA
        AAAAAAAAAAAABAAAAAAAAABWAAAA/wAAAP8AAABWAAAAAAAAAAQAAAD7AAAA/wAAAKkAAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAATAAAAL8AAADIAAAAlgAAAFcAAAAgAAAAAQAA
        AAAAAAACAAAAAQAAAAAAAAAEAAAAAAAAAFYAAAD/AAAA/wAAAFYAAAAAAAAABAAAAPsAAAD/AAAAqQAA
        AAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAE8AAAD/AAAA/gAAAP8AAAD/AAAA/wAA
        APYAAADSAAAAcwAAAAQAAAABAAAAAQAAAAMAAAAAAAAAVgAAAP8AAAD/AAAAVgAAAAAAAAAEAAAA+wAA
        AP8AAACpAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAuAAAAP8AAADwAAAA3gAA
        APwAAAD/AAAA/wAAAP0AAAD/AAAArQAAAAMAAAABAAAABQAAAAAAAABWAAAA/wAAAP8AAABWAAAAAAAA
        AAQAAAD7AAAA/wAAAKkAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAADDAAAA/wAA
        AN8AAAAQAAAALQAAAGsAAACnAAAA7gAAAP0AAAD/AAAArgAAAAMAAAAFAAAAAAAAAFYAAAD/AAAA/wAA
        AFYAAAAAAAAABAAAAPsAAAD/AAAAqQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAA
        AJMAAAD/AAAA/gAAADEAAAAAAAAABAAAAAAAAAAqAAAA5QAAAP8AAAD/AAAArgAAAAcAAAAAAAAAWAAA
        AP8AAAD/AAAAVgAAAAAAAAAEAAAA+wAAAP8AAACpAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAAAAAAAVQAAAP8AAAD/AAAAawAAAAAAAAAIAAAABQAAAAAAAAApAAAA5QAAAP8AAAD/AAAAsgAA
        AAAAAABWAAAA/wAAAP8AAABWAAAAAAAAAAQAAAD7AAAA/wAAAKkAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAAAAAAgAAAA8wAAAP8AAACnAAAAAAAAAAUAAAAAAAAABAAAAAAAAAApAAAA5QAA
        AP8AAAD/AAAAngAAAFkAAAD/AAAA/wAAAFYAAAAAAAAABAAAAPsAAAD/AAAAqQAAAAAAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKAAAA/wAAAO8AAAAtAAAAAAAAAAQAAAAAAAAABAAA
        AAAAAAApAAAA5QAAAP8AAAD7AAAA5AAAAPsAAAD/AAAAVgAAAAAAAAAEAAAA+wAAAP8AAACpAAAAAAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAHEAAAD/AAAA/gAAAOUAAAApAAAAAAAA
        AAQAAAAAAAAABAAAAAAAAAApAAAA5QAAAP8AAAD8AAAA/AAAAP8AAABYAAAAAAAAAAQAAAD7AAAA/wAA
        AKkAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKsAAAD/AAAA/wAA
        AOUAAAApAAAAAAAAAAQAAAAAAAAABAAAAAAAAAApAAAA5QAAAP8AAAD5AAAA/wAAAFYAAAAAAAAABQAA
        APsAAAD/AAAAqQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAwAA
        AK0AAAD/AAAA/wAAAOUAAAApAAAAAAAAAAQAAAAAAAAABAAAAAAAAAApAAAA5QAAAP8AAAD/AAAAsgAA
        AAIAAAABAAAA+gAAAP8AAACpAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAABAAAAAwAAAK0AAAD/AAAA/wAAAOUAAAApAAAAAAAAAAQAAAAAAAAABAAAAAAAAAApAAAA5QAA
        AP8AAAD/AAAAqAAAAAAAAAD0AAAA/wAAALkAAAAAAAAABgAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAA
        AAQAAAAEAAAAAwAAAAYAAAAEAAAABAAAALAAAAD/AAAA/wAAAOUAAAApAAAAAAAAAAQAAAAAAAAABAAA
        AAAAAAApAAAA5QAAAP8AAAD/AAAAeAAAAM4AAAD/AAAA+AAAADYAAAAAAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ0AAAD/AAAA/wAAAOUAAAApAAAAAAAA
        AAQAAAAAAAAABAAAAAAAAAAvAAAA8wAAAP8AAADcAAAAZgAAAP8AAAD+AAAA6gAAAHoAAABTAAAAVgAA
        AFYAAABWAAAAVgAAAFYAAABWAAAAVgAAAFYAAABWAAAAVQAAAFgAAABSAAAAVAAAAOUAAAD/AAAA/wAA
        AOUAAAApAAAAAAAAAAQAAAAAAAAABgAAAAAAAACxAAAA/wAAAPYAAAAAAAAAogAAAP8AAAD9AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+wAA
        APwAAAD4AAAA/wAAAOUAAAApAAAAAAAAAAYAAAAAAAAACgAAANcAAAD/AAAA6wAAAAEAAAADAAAAgAAA
        APAAAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD8AAAA/wAAAOUAAAAsAAAAAAAAAAYAAACuAAAA/wAAAP8AAACkAAAAAQAA
        AAIAAAAAAAAAEwAAAEYAAABXAAAAVgAAAFYAAABWAAAAVgAAAFYAAABWAAAAVgAAAFYAAABWAAAAVgAA
        AFYAAABWAAAAVgAAAFYAAABYAAAATQAAALAAAAD/AAAA/wAAAO4AAACrAAAA1QAAAP8AAAD/AAAA3gAA
        AB0AAAAAAAAAAQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAwAAAKgAAAD/AAAA/QAAAP8AAAD+AAAA/wAA
        AOAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAA
        AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAUAAAACAAAAAgAAAG8AAADZAAAA8gAA
        AOcAAACdAAAAGQAAAAAAAAADQAAAAoAAAAAAAAAECf/8ghAAAEIQAABCE///QhP//0IT//9CE/R/QhPI
        C0IT0qJCE4gJQhPQAEITkABCE5AAQhOQoEITkJBCE9CoAhPIVAITyCoCE8AVAhPwCoAT6AVBEAACoAn+
        QVAAAACogAAAUAAAACAgAAAAi//0ASAAAAI=
</value>
  </data>
</root>